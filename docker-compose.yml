version: "3"

services:
  etcd1:
    image: quay.io/coreos/etcd:v3.5.4
    container_name: etcd1
    hostname: etcd1
    env_file:
      - ./etcd/etcd1.env
    networks:
      cluster_network:
        ipv4_address: 10.10.0.6
    # volumes:
    #   - etcd1_data:/etcd-data

  etcd2:
    image: quay.io/coreos/etcd:v3.5.4
    container_name: etcd2
    hostname: etcd2
    env_file:
      - ./etcd/etcd2.env
    networks:
      cluster_network:
        ipv4_address: 10.10.0.7
    # volumes:
    #   - etcd1_data:/etcd-data
  etcd3:
    image: quay.io/coreos/etcd:v3.5.4
    container_name: etcd3
    hostname: etcd3c
    env_file:
      - ./etcd/etcd3.env
    networks:
      cluster_network:
        ipv4_address: 10.10.0.8

  postgres1:
  # master
      image: postresql-patroni:master
      container_name: postgresdb1
      hostname: postgresdb1
      restart: on-failure:5
      env_file:
        - ./PostgreSQL+Patroni/postgres.env
        - ./PostgreSQL+Patroni/patroni1.env
      # environment:
      #   POSTGRES_USER: ${POSTGRES_USER:-postgres} 
      #   POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      #   POSTGRES_DB: ${POSTGRES_DB:-postgres}
      ports:
      - "5432:5432"
      depends_on:
      - etcd1
      - etcd2
      - etcd3
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
        interval: 5s
        timeout: 5s
        retries: 5
      networks:
        cluster_network:
          ipv4_address: 10.10.0.3
  postgres2:
  # slave
      image: postresql-patroni:slave
      container_name: postgresdb2
      hostname: postgresdb2
      restart: on-failure:5
      # volumes:
      #   - db_data:/var/lib/postgresql/data
      env_file:
        - ./PostgreSQL+Patroni/postgres.env
        - ./PostgreSQL+Patroni/patroni2.env
      # environment:
      #   POSTGRES_USER: ${POSTGRES_USER:-postgres} 
      #   POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      #   POSTGRES_DB: ${POSTGRES_DB:-postgres}
      # ports:
      # - "5432:5432"
      depends_on:
      - etcd1
      - etcd2
      - etcd3
      - postgres1
      healthcheck:
        test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
        interval: 5s
        timeout: 5s
        retries: 5
      networks:
        cluster_network:
          ipv4_address: 10.10.0.4

  haproxy-keepalive1:
    image: haproxy-keepalive-master:cluster
    cap_add:
      - NET_ADMIN      
      - NET_BROADCAST   
      - NET_RAW
    networks:
      cluster_network:
          ipv4_address: 10.10.0.2
  haproxy-keepalive2:
    image: haproxy-keepalive-bkp:cluster
    cap_add:
    - NET_ADMIN      
    - NET_BROADCAST   
    - NET_RAW
    networks:
      cluster_network:
          ipv4_address: 10.10.0.5
  # haproxy:
  #   image: haproxy:latest
  #   container_name: haproxy
  #   hostname: haproxy
  #   volumes:
  #     - ./haproxy:/usr/local/etc/haproxy
  #   ports:
  #     - 5000:5000 
  #     - 5001:5001
  #     - 5002:5002 
  #   networks:
  #     cluster_network:
  #         ipv4_address: 10.10.0.2
    # volumes:
    #   - etcd1_data:/etcd-data
  
  
    
  # dataset-generator:
  #   image: a830bfe8b139
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #   container_name: dataset-generator
  #   hostname: dataset-generator
  #   restart: on-failure:5
  #   env_file:
  #     - envvar.env
  #   networks:
  #     cluster_network:
  #       ipv4_address: 10.10.0.3


# volumes:
#   db_data:

networks:
  cluster_network:
    ipam:
      driver: default
      config:
        - subnet: 10.10.0.0/24
          gateway: 10.10.0.1